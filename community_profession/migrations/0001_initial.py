# Generated by Django 4.0.4 on 2022-09-03 07:42

import Account.validator
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Community_Name', models.CharField(max_length=70)),
                ('Community_Cover_Image', models.ImageField(blank=True, null=True, upload_to='Community_Cover_image')),
                ('Community_Profile_Image', models.ImageField(upload_to='Community_Profile_Image')),
                ('Public', models.BooleanField(default=False)),
                ('Private', models.BooleanField(default=False)),
                ('Restricted', models.BooleanField(default=False)),
                ('Adult_Content', models.BooleanField(default=False)),
                ('Community_Type', models.BooleanField(default=True)),
                ('User_Profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Community_Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Community_type', models.CharField(blank=True, max_length=50, null=True)),
                ('Community_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.community')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Image', models.FileField(blank=True, null=True, upload_to='Image', validators=[Account.validator.file_size])),
                ('Video', models.FileField(blank=True, null=True, upload_to='Video', validators=[Account.validator.file_size])),
                ('Description', models.TextField()),
                ('Date', models.DateField(default=datetime.date(2022, 9, 3))),
                ('Time', models.TimeField(default=datetime.datetime(2022, 9, 3, 13, 12, 14, 17404))),
            ],
        ),
        migrations.CreateModel(
            name='News_Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Comment', models.TextField()),
                ('Date', models.DateField(default=datetime.date(2022, 9, 3))),
                ('Time', models.TimeField(default=datetime.datetime(2022, 9, 3, 13, 12, 14, 18404))),
                ('News_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.news')),
                ('User_Profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='UserPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Image', models.FileField(blank=True, null=True, upload_to='Post', validators=[Account.validator.file_size])),
                ('Description', models.TextField(blank=True, null=True)),
                ('Post_Date', models.DateField(blank=True, null=True)),
                ('Post_Time', models.TimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('Post_comment', models.IntegerField(blank=True, null=True)),
                ('post_type1', models.BooleanField(blank=True, null=True)),
                ('Like', models.ManyToManyField(blank=True, null=True, related_name='liked', to='Account.userprofile')),
                ('User_Profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_Profile', to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='User_Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Question', models.TextField()),
                ('User_id', models.TextField(blank=True, null=True)),
                ('Date', models.DateField(default=datetime.date(2022, 9, 3))),
                ('Time', models.TimeField(default=datetime.datetime(2022, 9, 3, 13, 12, 14, 13408))),
                ('answer', models.IntegerField(blank=True, null=True)),
                ('User_Profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='User_Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Answer', models.TextField()),
                ('Question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.user_question')),
                ('User_Profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Post_Commment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Comment', models.TextField(blank=True, null=True)),
                ('Comment_Date', models.DateField(blank=True, null=True)),
                ('Commenet_Time', models.TimeField(blank=True, null=True)),
                ('Comment_like', models.ImageField(blank=True, null=True, upload_to='')),
                ('User_Post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.userpost')),
                ('User_Profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='POST_and_Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='community_profession.userpost')),
                ('Question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='community_profession.user_question')),
            ],
        ),
        migrations.CreateModel(
            name='News_Comment_reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reply', models.TextField()),
                ('Reply_Date', models.DateField(default=datetime.date.today)),
                ('Reply_Time', models.TimeField(default=datetime.datetime(2022, 9, 3, 13, 12, 14, 18404))),
                ('Comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.news_comment')),
                ('User_Profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(choices=[('Like', 'Like'), ('Unlike', 'Unlike')], default='Like', max_length=10)),
                ('Post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.userpost')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Join_Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Commnunity_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='community_profession.community')),
                ('User_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Community_Post_Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Community_Comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.post_commment')),
                ('Community_Post_obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.community_post')),
            ],
        ),
        migrations.AddField(
            model_name='community_post',
            name='user_post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.userpost'),
        ),
        migrations.CreateModel(
            name='Community_Comment_reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reply', models.TextField()),
                ('Reply_Date', models.DateField(blank=True, null=True)),
                ('Reply_Time', models.TimeField(blank=True, null=True)),
                ('Community_Comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.community_post_comment')),
                ('User_Profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Comment_reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reply', models.TextField()),
                ('Reply_Date', models.DateField(blank=True, null=True)),
                ('Reply_Time', models.TimeField(blank=True, null=True)),
                ('Comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.post_commment')),
                ('User_Profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Answer_Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reply', models.TextField()),
                ('Answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.user_answer')),
                ('User_Profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Answer_later',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateField(default=datetime.date(2022, 9, 3))),
                ('Time', models.TimeField(default=datetime.datetime(2022, 9, 3, 13, 12, 14, 19403))),
                ('Question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community_profession.user_question')),
                ('User_Profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Account.userprofile')),
            ],
        ),
    ]
